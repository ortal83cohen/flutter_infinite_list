// Mocks generated by Mockito 5.0.7 from annotations
// in flutter_shutterstock_infinite_list/test/repository_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:flutter_shutterstock_infinite_list/data_source/local_data_source.dart'
    as _i5;
import 'package:flutter_shutterstock_infinite_list/data_source/remote_data_source.dart'
    as _i2;
import 'package:flutter_shutterstock_infinite_list/models/image_model.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: comment_references
// ignore_for_file: unnecessary_parenthesis

// ignore_for_file: prefer_const_constructors

// ignore_for_file: avoid_redundant_argument_values

/// A class which mocks [RemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteDataSource extends _i1.Mock implements _i2.RemoteDataSource {
  MockRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.ImageModel>> fetchImages(int? startIndex, int? perPage) =>
      (super.noSuchMethod(
              Invocation.method(#fetchImages, [startIndex, perPage]),
              returnValue:
                  Future<List<_i4.ImageModel>>.value(<_i4.ImageModel>[]))
          as _i3.Future<List<_i4.ImageModel>>);
}

/// A class which mocks [LocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalDataSource extends _i1.Mock implements _i5.LocalDataSource {
  MockLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.ImageModel>> fetchImages(int? startIndex, int? perPage) =>
      (super.noSuchMethod(
              Invocation.method(#fetchImages, [startIndex, perPage]),
              returnValue:
                  Future<List<_i4.ImageModel>>.value(<_i4.ImageModel>[]))
          as _i3.Future<List<_i4.ImageModel>>);
  @override
  dynamic saveImages(int? startIndex, List<_i4.ImageModel>? images) =>
      super.noSuchMethod(Invocation.method(#saveImages, [startIndex, images]));
}
